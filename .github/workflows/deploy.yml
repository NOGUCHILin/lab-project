name: Deploy to NixOS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lab-project repository
        uses: actions/checkout@v4

      # Tailscaleに接続
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      # Dashboard & Nakamura-Misakiコードを同期
      - name: Sync Dashboard code
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            # lab-projectコード取得（GitHubから）
            cd /tmp
            rm -rf lab-project-temp
            git clone --filter=blob:none --no-checkout --depth 1 https://github.com/NOGUCHILin/lab-project.git lab-project-temp
            cd lab-project-temp
            git sparse-checkout init --cone
            git sparse-checkout set projects/dashboard nakamura-misaki
            git checkout main

            # ~/projects/dashboard/ に同期
            rsync -av --delete \
              --exclude='node_modules' \
              --exclude='.next' \
              projects/dashboard/ /home/noguchilin/projects/dashboard/

            # ~/projects/lab-project/nakamura-misaki/ に同期
            mkdir -p /home/noguchilin/projects/lab-project
            rsync -av --delete \
              --exclude='.venv' \
              --exclude='node_modules' \
              --exclude='workspaces/user_*' \
              --exclude='workspaces/sessions/*.json' \
              nakamura-misaki/ /home/noguchilin/projects/lab-project/nakamura-misaki/

            # 一時ディレクトリ削除
            cd ~
            rm -rf /tmp/lab-project-temp

      # nakamura-misaki依存関係を同期
      - name: Install nakamura-misaki dependencies
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            cd /home/noguchilin/projects/lab-project/nakamura-misaki

            # 依存関係をインストール
            if [ -f .venv/bin/pip ]; then
              .venv/bin/pip install -e .
              echo "✅ Dependencies installed"
            else
              echo "Warning: venv not found, skipping dependency installation"
            fi

      # NixOS設定をデプロイ
      - name: Deploy NixOS configuration
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          command_timeout: 30m
          script: |
            # nixos-configをsparse checkoutで同期
            cd ~
            rm -rf nixos-temp nixos-config
            git clone --depth 1 --filter=blob:none --sparse https://github.com/NOGUCHILin/lab-project.git nixos-temp
            cd nixos-temp
            git sparse-checkout set nixos-config

            # nixos-config内でビルド（正しいgit構造を維持）
            cd nixos-config
            sudo nixos-rebuild switch --flake .#home-lab-01

            # 成功後、永続化位置に移動
            cd ~
            mv nixos-temp/nixos-config nixos-config
            rm -rf nixos-temp

      # Dashboard再起動（新しいコードを反映）
      - name: Restart Dashboard
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            # Dashboard.service再起動（NixOS設定でNOPASSWD許可済み）
            sudo systemctl restart dashboard.service

            # 再起動完了を待機
            sleep 5

            echo "✅ Dashboard restarted with new code"

      # デプロイ完了確認
      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            systemctl is-active dashboard.service
            systemctl is-active nakamura-misaki-api.service
            systemctl is-active code-server.service
            echo "✅ All services running"
