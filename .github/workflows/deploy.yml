name: Deploy to NixOS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout lab-project repository
        uses: actions/checkout@v4

      # Tailscale„Å´Êé•Á∂ö
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      # Dashboard & Nakamura-Misaki„Ç≥„Éº„Éâ„ÇíÂêåÊúü
      - name: Sync Dashboard code
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            # lab-project„Ç≥„Éº„ÉâÂèñÂæóÔºàGitHub„Åã„ÇâÔºâ
            cd /tmp
            rm -rf lab-project-temp
            git clone --filter=blob:none --no-checkout --depth 1 https://github.com/NOGUCHILin/lab-project.git lab-project-temp
            cd lab-project-temp
            git sparse-checkout init --cone
            git sparse-checkout set projects/dashboard nakamura-misaki
            git checkout main

            # ~/projects/dashboard/ „Å´ÂêåÊúü
            rsync -av --delete \
              --exclude='node_modules' \
              --exclude='.next' \
              projects/dashboard/ /home/noguchilin/projects/dashboard/

            # ~/projects/lab-project/nakamura-misaki/ „Å´ÂêåÊúü
            mkdir -p /home/noguchilin/projects/lab-project
            rsync -av --delete \
              --exclude='.venv' \
              --exclude='node_modules' \
              --exclude='workspaces/user_*' \
              --exclude='workspaces/sessions/*.json' \
              nakamura-misaki/ /home/noguchilin/projects/lab-project/nakamura-misaki/

            # ‰∏ÄÊôÇ„Éá„Ç£„É¨„ÇØ„Éà„É™ÂâäÈô§
            cd ~
            rm -rf /tmp/lab-project-temp

      # NixOSË®≠ÂÆö„Çí„Éá„Éó„É≠„Ç§ÔºàPython‰æùÂ≠òÈñ¢‰øÇ„ÇÇNix„ÅßÁÆ°ÁêÜÔºâ
      - name: Deploy NixOS configuration
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          command_timeout: 30m
          script: |
            # nixos-config„Çísparse checkout„ÅßÂêåÊúü
            echo "üì• Cloning nixos-config..."
            cd ~
            rm -rf nixos-temp nixos-config
            git clone --depth 1 --filter=blob:none --sparse https://github.com/NOGUCHILin/lab-project.git nixos-temp
            cd nixos-temp
            git sparse-checkout set nixos-config

            echo "üìã Git commit info:"
            git log -1 --oneline
            echo ""

            echo "üìÅ nixos-config structure:"
            ls -la nixos-config/modules/services/registry/nakamura-misaki-api.nix
            echo ""

            # git repository„ÅÆ„É´„Éº„Éà„Åã„Çâ„Éì„É´„ÉâÔºàNix„ÅågitËøΩË∑°„Éï„Ç°„Ç§„É´„ÇíÊ≠£„Åó„ÅèË™çË≠òÔºâ
            echo "üî® Running nixos-rebuild switch..."
            sudo nixos-rebuild switch --flake ./nixos-config#home-lab-01 2>&1 | tee /tmp/nixos-rebuild.log
            REBUILD_EXIT_CODE=${PIPESTATUS[0]}

            echo ""
            echo "üìä nixos-rebuild exit code: $REBUILD_EXIT_CODE"

            if [ $REBUILD_EXIT_CODE -ne 0 ]; then
              echo "‚ùå nixos-rebuild failed!"
              exit $REBUILD_EXIT_CODE
            fi

            echo ""
            echo "üîç New systemd service check:"
            cat /etc/systemd/system/nakamura-misaki-api.service | grep ExecStart
            echo ""

            echo "üì¶ New Nix store scripts:"
            ls -lt /nix/store/*start-nakamura-api 2>/dev/null | grep -v '.drv' | head -3
            echo ""

            # ÊàêÂäüÂæå„ÄÅÊ∞∏Á∂öÂåñ‰ΩçÁΩÆ„Å´ÁßªÂãï
            echo "üìÇ Moving nixos-config to permanent location..."
            cd ~
            mv nixos-temp/nixos-config nixos-config
            rm -rf nixos-temp

            echo "‚úÖ NixOS configuration deployed successfully"

      # „Çµ„Éº„Éì„ÇπÂÜçËµ∑ÂãïÔºàÊñ∞„Åó„ÅÑ„Ç≥„Éº„Éâ„Å®NixOSË®≠ÂÆö„ÇíÂèçÊò†Ôºâ
      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            echo "üîÑ Restarting services..."

            # Dashboard.serviceÂÜçËµ∑ÂãïÔºàNixOSË®≠ÂÆö„ÅßNOPASSWDË®±ÂèØÊ∏à„ÅøÔºâ
            echo "  - Restarting dashboard.service..."
            sudo systemctl restart dashboard.service

            # nakamura-misaki-api.serviceÂÜçËµ∑ÂãïÔºàPythonÁí∞Â¢ÉÂ§âÊõ¥„ÇíÂèçÊò†Ôºâ
            echo "  - Restarting nakamura-misaki-api.service..."
            sudo systemctl restart nakamura-misaki-api.service

            # ÂÜçËµ∑ÂãïÂÆå‰∫Ü„ÇíÂæÖÊ©ü
            sleep 5

            echo ""
            echo "üìä Service status:"
            systemctl status nakamura-misaki-api.service --no-pager -l || true
            echo ""

            echo "‚úÖ Services restarted"

      # „Éá„Éó„É≠„Ç§ÂÆå‰∫ÜÁ¢∫Ë™ç
      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: home-lab-01
          username: ${{ secrets.NIXOS_USER }}
          key: ${{ secrets.NIXOS_SSH_KEY }}
          script: |
            echo "üîç Verifying service status..."
            echo ""

            echo "Dashboard:"
            systemctl is-active dashboard.service && echo "  ‚úÖ Running" || echo "  ‚ùå Not running"

            echo "nakamura-misaki API:"
            systemctl is-active nakamura-misaki-api.service && echo "  ‚úÖ Running" || echo "  ‚ùå Not running"

            echo "Code Server:"
            systemctl is-active code-server.service && echo "  ‚úÖ Running" || echo "  ‚ùå Not running"

            echo ""

            # nakamura-misaki-api„ÅåÂ§±Êïó„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÄÅ„É≠„Ç∞„ÇíË°®Á§∫
            if ! systemctl is-active nakamura-misaki-api.service > /dev/null; then
              echo "‚ö†Ô∏è  nakamura-misaki-api.service failed, showing logs:"
              journalctl -u nakamura-misaki-api.service -n 10 --no-pager
              echo ""
              echo "ExecStart path:"
              cat /etc/systemd/system/nakamura-misaki-api.service | grep ExecStart
              exit 1
            fi

            echo "‚úÖ All services running"
