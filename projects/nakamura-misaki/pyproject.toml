[project]
name = "nakamura-misaki"
version = "6.0.0"
description = "nakamura-misaki v6.0.0 - DDD + Clean Architecture based task management AI assistant"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn>=0.30.0",
    "slack-bolt>=1.18.0",
    "slack-sdk>=3.31.0",  # Relaxed from 3.37.0 for nixpkgs compatibility
    # "claude-agent-sdk>=0.1.3",  # Not in nixpkgs, installed separately via uv
    "anthropic>=0.37.0",
    "aiohttp>=3.10.0",  # Relaxed from 3.13.0 for nixpkgs compatibility
    "asyncpg>=0.30.0",  # Required for SQLAlchemy async postgresql+asyncpg://
    "psycopg[binary,pool]>=3.2.0",
    "sqlalchemy>=2.0.0",
    "pgvector>=0.3.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "python-dateutil>=2.8.0",
    "alembic>=1.13.0",
    "requests>=2.31.0",  # HTTP library for Slack adapter
]

[project.scripts]
nakamura-misaki = "src.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.5.0",  # Parallel test execution
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "httpx>=0.27.0",
    "aiosqlite>=0.20.0",
    "greenlet>=3.1.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

# Test markers
markers = [
    "unit: Unit tests (no external dependencies)",
    "integration: Integration tests (use database, etc.)",
    "e2e: End-to-end tests",
    "slow: Tests that take more than 1 second",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = ["^build/", "^dist/", "^\\."]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "src/infrastructure/main.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
